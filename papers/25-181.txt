To: J3                                                     J3/25-181
From: Malcolm Cohen
Subject: Editorial correction re VALUE and polymorphic
Date: 2025-October-09
Reference: 25-007r1, 08-147r1


1. Introduction

We lifted most of the constraints on the VALUE attribute back in Fortran
2008, but neglected to describe this properly in the Introduction.
(Initially, we neglected to describe them at all!)

When we did add some text, which now appears in Annex C.2, it was
ambiguous and incomplete:
    (ambiguous) it is almost any array that is permitted to have VALUE, not
                just ones with nonconstant length type parameters;
    (incomplete) it fails to mention polymorphic.

There is absolutely no doubt that we deliberately allowed polymorphic: it
is right there in the paper that added the feature.

No-one is going to be confused by the ambiguity, but failing to mention
polymorphic is definitely a disservice to vendors who had compilers before
Fortran 2008. Or, for that matter, users who remember the limitation from
Fortran 2003, and wonder if we deliberately changed the feature or if it is
just that we moved and reworded the limitation so that they cannot find it.

We should describe this properly.


2. Edits to 25-007r1

[607:4-5] C.2 Features that were new in Fortran 2008, Data declaration,
    Replace
       "An array or object with a nonconstant length type parameter can
        have the VALUE attribute."
    with
       "An array, a polymorphic object, or an object with a nonconstant
        length type parameter can have the VALUE attribute, as long as it
        is not an assumed-size array, a coarray, or a variable with a
        coarray potential subobject component."
{We don't really need the "as long as" text, but I think it describes what
 we added in Fortran 2008 better with it.
 There are other constraints on VALUE (e.g. not POINTER), but I don't think
 adding them would improve the description.}

===END===
